/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  5: {
    AffiliateFacet: {
      address: "0x68346B9D08Cc199eb84c35FB56D3aF31649BE60f",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "affiliate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
          ],
          name: "NewAffiliate",
          type: "event",
        },
        {
          inputs: [],
          name: "allAffiliates",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_referrer",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "becomeAffiliate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getAffiliateDownlineSoldTokens",
          outputs: [
            {
              internalType: "uint256[]",
              name: "soldTokens",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getAffiliateInfo",
          outputs: [
            {
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
            {
              internalType: "address",
              name: "affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "referrer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "getAffiliateSaleData",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "commissionAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "date",
                  type: "uint256",
                },
              ],
              internalType: "struct SaleInfo",
              name: "saleInfo",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getAffiliateSoldTokens",
          outputs: [
            {
              internalType: "uint256[]",
              name: "soldTokens",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getCampaignAffiliatesCount",
          outputs: [
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliate",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getIsCampaignAffiliate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliate",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getRefereesOf",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    CampaignFacet: {
      address: "0xAd83B158C3910a4a56ed59E4255CF8c5d1F02dC2",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "nftAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "commissionRate",
              type: "uint256[]",
            },
          ],
          name: "NewCampaign",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "referrer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "NewReferee",
          type: "event",
        },
        {
          inputs: [],
          name: "UNADUS",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "address",
              name: "_lockAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_level1Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level2Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level3Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_delay",
              type: "uint256",
            },
          ],
          name: "createCampaign",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getCampaignData",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "lockAddress",
                  type: "address",
                },
                {
                  internalType: "uint256[]",
                  name: "tiersCommission",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256",
                  name: "commissionBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "nonCommissionBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "delay",
                  type: "uint256",
                },
              ],
              internalType: "struct CampaignInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_lockAddress",
              type: "address",
            },
          ],
          name: "getCampaignForLock",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "lockAddress",
                  type: "address",
                },
                {
                  internalType: "uint256[]",
                  name: "tiersCommission",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256",
                  name: "commissionBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "nonCommissionBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "delay",
                  type: "uint256",
                },
              ],
              internalType: "struct CampaignInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMaxTiers",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_UNADUSAddress",
              type: "address",
            },
          ],
          name: "initUNADUS",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "lockToCampaignId",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_commission",
              type: "uint256",
            },
          ],
          name: "onNonReferredPurchase",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_recipient",
              type: "address",
            },
            {
              internalType: "address",
              name: "_affiliateAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_commission",
              type: "uint256",
            },
          ],
          name: "onReferredPurchase",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newName",
              type: "string",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "setName",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_level1Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level2Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level3Commission",
              type: "uint256",
            },
          ],
          name: "setTiersCommission",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        onNonReferredPurchase: "contracts/interfaces/ICampaignFacet.sol",
        onReferredPurchase: "contracts/interfaces/ICampaignFacet.sol",
      },
    },
    DiamondCutFacet: {
      address: "0x79Cdfb8F099ef09A36130b3F442e8F6521fE291F",
      abi: [
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotAddFunctionToDiamondThatAlreadyExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotAddSelectorsToZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveFunctionThatDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionThatDoesNotExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "_action",
              type: "uint8",
            },
          ],
          name: "IncorrectFacetCutAction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_initializationContractAddress",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "InitializationFunctionReverted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_contractAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "_message",
              type: "string",
            },
          ],
          name: "NoBytecodeAtAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "NoSelectorsProvidedForFacetForCut",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "address",
              name: "_contractOwner",
              type: "address",
            },
          ],
          name: "NotContractOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "RemoveFacetAddressMustBeZeroAddress",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "enum IDiamond.FacetCutAction",
                  name: "action",
                  type: "uint8",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              indexed: false,
              internalType: "struct IDiamond.FacetCut[]",
              name: "_diamondCut",
              type: "tuple[]",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_init",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "DiamondCut",
          type: "event",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "enum IDiamond.FacetCutAction",
                  name: "action",
                  type: "uint8",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              internalType: "struct IDiamond.FacetCut[]",
              name: "_diamondCut",
              type: "tuple[]",
            },
            {
              internalType: "address",
              name: "_init",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "diamondCut",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        diamondCut: "contracts/interfaces/IDiamondCut.sol",
      },
    },
    DiamondLoupeFacet: {
      address: "0x7ED5c9c74628b51aF1C30Bd01Fd4Ff9fb2657b4E",
      abi: [
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_functionSelector",
              type: "bytes4",
            },
          ],
          name: "facetAddress",
          outputs: [
            {
              internalType: "address",
              name: "facetAddress_",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "facetAddresses",
          outputs: [
            {
              internalType: "address[]",
              name: "facetAddresses_",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facet",
              type: "address",
            },
          ],
          name: "facetFunctionSelectors",
          outputs: [
            {
              internalType: "bytes4[]",
              name: "_facetFunctionSelectors",
              type: "bytes4[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "facets",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              internalType: "struct IDiamondLoupe.Facet[]",
              name: "facets_",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        facetAddress: "contracts/interfaces/IDiamondLoupe.sol",
        facetAddresses: "contracts/interfaces/IDiamondLoupe.sol",
        facetFunctionSelectors: "contracts/interfaces/IDiamondLoupe.sol",
        facets: "contracts/interfaces/IDiamondLoupe.sol",
        supportsInterface: "contracts/interfaces/IERC165.sol",
      },
    },
    OwnershipFacet: {
      address: "0xaB5E1bEd69cF87a65Dd4233D58B62B98D7408a04",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "address",
              name: "_contractOwner",
              type: "address",
            },
          ],
          name: "NotContractOwner",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "owner_",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "contracts/interfaces/IERC173.sol",
        transferOwnership: "contracts/interfaces/IERC173.sol",
      },
    },
    RefereeFacet: {
      address: "0xFB7B1cA9d0Fc1Ca369A7Bd0a432B292f7D4460b4",
      abi: [
        {
          inputs: [],
          name: "getAllReferees",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_referee",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getRefereeData",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "id",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "referrer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "keyPurchased",
                  type: "uint256",
                },
              ],
              internalType: "struct RefereeInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_referee",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "referrerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YourContract: {
      address: "0x13BB699dF9cA5761Ceed8c806416e36b0bed4B86",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
    YourDiamondContract: {
      address: "0xf0053878B46F49Cf586A46AbF48eA25F8b631944",
      abi: [
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "enum IDiamond.FacetCutAction",
                  name: "action",
                  type: "uint8",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              internalType: "struct IDiamond.FacetCut[]",
              name: "_diamondCut",
              type: "tuple[]",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "init",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "initCalldata",
                  type: "bytes",
                },
              ],
              internalType: "struct DiamondArgs",
              name: "_args",
              type: "tuple",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotAddFunctionToDiamondThatAlreadyExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotAddSelectorsToZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveFunctionThatDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionThatDoesNotExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_functionSelector",
              type: "bytes4",
            },
          ],
          name: "FunctionNotFound",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "_action",
              type: "uint8",
            },
          ],
          name: "IncorrectFacetCutAction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_initializationContractAddress",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "InitializationFunctionReverted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_contractAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "_message",
              type: "string",
            },
          ],
          name: "NoBytecodeAtAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "NoSelectorsProvidedForFacetForCut",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "RemoveFacetAddressMustBeZeroAddress",
          type: "error",
        },
        {
          stateMutability: "payable",
          type: "fallback",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
  80001: {
    AffiliateFacet: {
      address: "0xAF18b89B58916C8f3765ea877E45379dd538F159",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "affiliate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
          ],
          name: "NewAffiliate",
          type: "event",
        },
        {
          inputs: [],
          name: "allAffiliates",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_referrer",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "becomeAffiliate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getAffiliateInfo",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "affiliateId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "referrer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "balance",
                  type: "uint256",
                },
              ],
              internalType: "struct AffiliateInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getAffiliatesOf",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "affiliateId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "referrer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "balance",
                  type: "uint256",
                },
              ],
              internalType: "struct AffiliateInfo[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getCampaignAffiliates",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "affiliateId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "referrer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "balance",
                  type: "uint256",
                },
              ],
              internalType: "struct AffiliateInfo[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliate",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getRefereesOf",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "isCampaignAffiliate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    CampaignFacet: {
      address: "0xefD82D8B32d5ee6C28672995F58879867cc7C0d0",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "nftAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "commissionRate",
              type: "uint256[]",
            },
          ],
          name: "NewCampaign",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "referrer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "NewReferee",
          type: "event",
        },
        {
          inputs: [],
          name: "UNADUS",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "address",
              name: "_lockAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_level1Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level2Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level3Commission",
              type: "uint256",
            },
          ],
          name: "createCampaign",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getCampaignData",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "lockAddress",
                  type: "address",
                },
                {
                  internalType: "uint256[]",
                  name: "tiersCommission",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256",
                  name: "commissionBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "nonCommissionBalance",
                  type: "uint256",
                },
              ],
              internalType: "struct CampaignInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_lockAddress",
              type: "address",
            },
          ],
          name: "getCampaignForLock",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "lockAddress",
                  type: "address",
                },
                {
                  internalType: "uint256[]",
                  name: "tiersCommission",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256",
                  name: "commissionBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "nonCommissionBalance",
                  type: "uint256",
                },
              ],
              internalType: "struct CampaignInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMaxTiers",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_UNADUSAddress",
              type: "address",
            },
          ],
          name: "initUNADUS",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "lockToCampaignId",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_commission",
              type: "uint256",
            },
          ],
          name: "onNonReferredPurchase",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_recipient",
              type: "address",
            },
            {
              internalType: "address",
              name: "_affiliateAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_commission",
              type: "uint256",
            },
          ],
          name: "onReferredPurchase",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newName",
              type: "string",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "setName",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_level1Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level2Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level3Commission",
              type: "uint256",
            },
          ],
          name: "setTiersCommission",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        onNonReferredPurchase: "contracts/interfaces/ICampaignFacet.sol",
        onReferredPurchase: "contracts/interfaces/ICampaignFacet.sol",
      },
    },
    DiamondCutFacet: {
      address: "0xad301b5748DC07D8C8B96102C052280A332aAfDE",
      abi: [
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotAddFunctionToDiamondThatAlreadyExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotAddSelectorsToZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveFunctionThatDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionThatDoesNotExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "_action",
              type: "uint8",
            },
          ],
          name: "IncorrectFacetCutAction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_initializationContractAddress",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "InitializationFunctionReverted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_contractAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "_message",
              type: "string",
            },
          ],
          name: "NoBytecodeAtAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "NoSelectorsProvidedForFacetForCut",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "address",
              name: "_contractOwner",
              type: "address",
            },
          ],
          name: "NotContractOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "RemoveFacetAddressMustBeZeroAddress",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "enum IDiamond.FacetCutAction",
                  name: "action",
                  type: "uint8",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              indexed: false,
              internalType: "struct IDiamond.FacetCut[]",
              name: "_diamondCut",
              type: "tuple[]",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_init",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "DiamondCut",
          type: "event",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "enum IDiamond.FacetCutAction",
                  name: "action",
                  type: "uint8",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              internalType: "struct IDiamond.FacetCut[]",
              name: "_diamondCut",
              type: "tuple[]",
            },
            {
              internalType: "address",
              name: "_init",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "diamondCut",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        diamondCut: "contracts/interfaces/IDiamondCut.sol",
      },
    },
    DiamondLoupeFacet: {
      address: "0xF33f085dC0BD3CA9CdA42B72C0a08f74f1974884",
      abi: [
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_functionSelector",
              type: "bytes4",
            },
          ],
          name: "facetAddress",
          outputs: [
            {
              internalType: "address",
              name: "facetAddress_",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "facetAddresses",
          outputs: [
            {
              internalType: "address[]",
              name: "facetAddresses_",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facet",
              type: "address",
            },
          ],
          name: "facetFunctionSelectors",
          outputs: [
            {
              internalType: "bytes4[]",
              name: "_facetFunctionSelectors",
              type: "bytes4[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "facets",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              internalType: "struct IDiamondLoupe.Facet[]",
              name: "facets_",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        facetAddress: "contracts/interfaces/IDiamondLoupe.sol",
        facetAddresses: "contracts/interfaces/IDiamondLoupe.sol",
        facetFunctionSelectors: "contracts/interfaces/IDiamondLoupe.sol",
        facets: "contracts/interfaces/IDiamondLoupe.sol",
        supportsInterface: "contracts/interfaces/IERC165.sol",
      },
    },
    OwnershipFacet: {
      address: "0x16030Fa10190E5db43ade7711705ACd577E38002",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "address",
              name: "_contractOwner",
              type: "address",
            },
          ],
          name: "NotContractOwner",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "owner_",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "contracts/interfaces/IERC173.sol",
        transferOwnership: "contracts/interfaces/IERC173.sol",
      },
    },
    RefereeFacet: {
      address: "0xB139D762460bB0E2aF9E3B6863a9E3CC2F232929",
      abi: [
        {
          inputs: [],
          name: "getAllReferees",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_referee",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getRefereeData",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "id",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "referrer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "keyPurchased",
                  type: "uint256",
                },
              ],
              internalType: "struct RefereeInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_referee",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "referralOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YourContract: {
      address: "0xe35634191A266776c878AC53b6cF080146eD0360",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
    YourDiamondContract: {
      address: "0x956Ae90D5d81cFeec283BcA933c63b66E2Ad3F90",
      abi: [
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "enum IDiamond.FacetCutAction",
                  name: "action",
                  type: "uint8",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              internalType: "struct IDiamond.FacetCut[]",
              name: "_diamondCut",
              type: "tuple[]",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "init",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "initCalldata",
                  type: "bytes",
                },
              ],
              internalType: "struct DiamondArgs",
              name: "_args",
              type: "tuple",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotAddFunctionToDiamondThatAlreadyExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotAddSelectorsToZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveFunctionThatDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionThatDoesNotExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_functionSelector",
              type: "bytes4",
            },
          ],
          name: "FunctionNotFound",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "_action",
              type: "uint8",
            },
          ],
          name: "IncorrectFacetCutAction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_initializationContractAddress",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "InitializationFunctionReverted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_contractAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "_message",
              type: "string",
            },
          ],
          name: "NoBytecodeAtAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "NoSelectorsProvidedForFacetForCut",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "RemoveFacetAddressMustBeZeroAddress",
          type: "error",
        },
        {
          stateMutability: "payable",
          type: "fallback",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155111: {
    AffiliateFacet: {
      address: "0xB3347cB72d54d09Ce964B99C2Ce3C18fB351755d",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "affiliate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
          ],
          name: "NewAffiliate",
          type: "event",
        },
        {
          inputs: [],
          name: "allAffiliates",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_referrer",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "becomeAffiliate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getAffiliateDownlineSoldTokens",
          outputs: [
            {
              internalType: "uint256[]",
              name: "soldTokens",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getAffiliateEthBalanceForCampaign",
          outputs: [
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getAffiliateReferrer",
          outputs: [
            {
              internalType: "address",
              name: "referrer",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "getAffiliateSaleData",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "purchaseToken",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "commissionAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "date",
                  type: "uint256",
                },
              ],
              internalType: "struct SaleInfo",
              name: "saleInfo",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getAffiliateSoldTokens",
          outputs: [
            {
              internalType: "uint256[]",
              name: "soldTokens",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliateId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "getAffiliateTokenBalanceForCampaign",
          outputs: [
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getCampaignAffiliatesCount",
          outputs: [
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliate",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getIsCampaignAffiliate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_affiliate",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getRefereesOf",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    CampaignFacet: {
      address: "0xA7bd1e1725B34B2f9443233b84709E445b8Ae7e1",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "nftAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "commissionRate",
              type: "uint256[]",
            },
          ],
          name: "NewCampaign",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "referrer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "NewReferee",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "address",
              name: "_lockAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_level1Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level2Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level3Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_delay",
              type: "uint256",
            },
          ],
          name: "createCampaign",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllCampaigns",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "lockAddress",
                  type: "address",
                },
                {
                  internalType: "uint256[]",
                  name: "tiersCommission",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256",
                  name: "delay",
                  type: "uint256",
                },
              ],
              internalType: "struct CampaignInfo[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getCampaignById",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "lockAddress",
                  type: "address",
                },
                {
                  internalType: "uint256[]",
                  name: "tiersCommission",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256",
                  name: "delay",
                  type: "uint256",
                },
              ],
              internalType: "struct CampaignInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "getCampaignCommissionBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_lockAddress",
              type: "address",
            },
          ],
          name: "getCampaignForLock",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "lockAddress",
                  type: "address",
                },
                {
                  internalType: "uint256[]",
                  name: "tiersCommission",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256",
                  name: "delay",
                  type: "uint256",
                },
              ],
              internalType: "struct CampaignInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "getCampaignNonCommissionBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getIsCampaign",
          outputs: [
            {
              internalType: "bool",
              name: "isCampaign",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMaxTiers",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getWithdrawalDelayForCampaign",
          outputs: [
            {
              internalType: "uint256",
              name: "delayInDays",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_commission",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "onNonReferredPurchase",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "affiliateAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "commission",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "tokenAddress",
                  type: "address",
                },
              ],
              internalType: "struct ReferredPurchaseData",
              name: "_purchaseData",
              type: "tuple",
            },
          ],
          name: "onReferredPurchase",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newName",
              type: "string",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "setName",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_level1Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level2Commission",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_level3Commission",
              type: "uint256",
            },
          ],
          name: "setTiersCommission",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_delayInDays",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "setWithdrawalDelayForCampaign",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        onNonReferredPurchase: "contracts/interfaces/ICampaignFacet.sol",
        onReferredPurchase: "contracts/interfaces/ICampaignFacet.sol",
      },
    },
    DiamondCutFacet: {
      address: "0x554c84Bee76F2Ea076F3161F4a7db8051122c75F",
      abi: [
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotAddFunctionToDiamondThatAlreadyExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotAddSelectorsToZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveFunctionThatDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionThatDoesNotExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "_action",
              type: "uint8",
            },
          ],
          name: "IncorrectFacetCutAction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_initializationContractAddress",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "InitializationFunctionReverted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_contractAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "_message",
              type: "string",
            },
          ],
          name: "NoBytecodeAtAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "NoSelectorsProvidedForFacetForCut",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "address",
              name: "_contractOwner",
              type: "address",
            },
          ],
          name: "NotContractOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "RemoveFacetAddressMustBeZeroAddress",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "enum IDiamond.FacetCutAction",
                  name: "action",
                  type: "uint8",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              indexed: false,
              internalType: "struct IDiamond.FacetCut[]",
              name: "_diamondCut",
              type: "tuple[]",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_init",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "DiamondCut",
          type: "event",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "enum IDiamond.FacetCutAction",
                  name: "action",
                  type: "uint8",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              internalType: "struct IDiamond.FacetCut[]",
              name: "_diamondCut",
              type: "tuple[]",
            },
            {
              internalType: "address",
              name: "_init",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "diamondCut",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        diamondCut: "contracts/interfaces/IDiamondCut.sol",
      },
    },
    DiamondLoupeFacet: {
      address: "0x307533e31be571e0cd018CA31c70eed4Dde6043e",
      abi: [
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_functionSelector",
              type: "bytes4",
            },
          ],
          name: "facetAddress",
          outputs: [
            {
              internalType: "address",
              name: "facetAddress_",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "facetAddresses",
          outputs: [
            {
              internalType: "address[]",
              name: "facetAddresses_",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facet",
              type: "address",
            },
          ],
          name: "facetFunctionSelectors",
          outputs: [
            {
              internalType: "bytes4[]",
              name: "_facetFunctionSelectors",
              type: "bytes4[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "facets",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              internalType: "struct IDiamondLoupe.Facet[]",
              name: "facets_",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        facetAddress: "contracts/interfaces/IDiamondLoupe.sol",
        facetAddresses: "contracts/interfaces/IDiamondLoupe.sol",
        facetFunctionSelectors: "contracts/interfaces/IDiamondLoupe.sol",
        facets: "contracts/interfaces/IDiamondLoupe.sol",
        supportsInterface: "contracts/interfaces/IERC165.sol",
      },
    },
    MembershipFacet: {
      address: "0x74178a4C5d53d8B888c030E08600dc7C5Cdc532d",
      abi: [
        {
          inputs: [],
          name: "getMembershipLock",
          outputs: [
            {
              internalType: "address",
              name: "membershipLock",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_membershipLock",
              type: "address",
            },
          ],
          name: "setMembershipLock",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    OwnershipFacet: {
      address: "0xa74a109Af82558983e7Bd131e520d54FA37A7cE6",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "address",
              name: "_contractOwner",
              type: "address",
            },
          ],
          name: "NotContractOwner",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "owner_",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "contracts/interfaces/IERC173.sol",
        transferOwnership: "contracts/interfaces/IERC173.sol",
      },
    },
    RefereeFacet: {
      address: "0x58D35b29f4fD170690221966Ed3326C7AE19fA12",
      abi: [
        {
          inputs: [],
          name: "getAllReferees",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_referee",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "getRefereeData",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "campaignId",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "id",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "referrer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "keyPurchased",
                  type: "uint256",
                },
              ],
              internalType: "struct RefereeInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_referee",
              type: "address",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "referrerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    WithdrawalFacet: {
      address: "0x1D44B61Fc07BDC9Be49e2cf9ac78B1ABc4bbE296",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_recipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "AffiliateWithdrawal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "campaignId",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_recipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "CreatorWithdrawal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_recipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "FeesWithdrawal",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "affiliateEthWithdrawal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "affiliateTokenWithdrawal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
          ],
          name: "creatorEthWithdrawal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "creatorTokenWithdrawal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "getFeesBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getPercentageWithdrawalFee",
          outputs: [
            {
              internalType: "uint256",
              name: "fee",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_campaignId",
              type: "address",
            },
            {
              internalType: "address",
              name: "_account",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_isAffiliate",
              type: "bool",
            },
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "getWithdrawableBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feePercentage",
              type: "uint256",
            },
          ],
          name: "setPercentageWithdrawalFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawEthFees",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
          ],
          name: "withdrawTokenFees",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YourContract: {
      address: "0x0DA9D62477B8ADfAf1Aa0ce51CC2849882E8B034",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
    YourDiamondContract: {
      address: "0x7bC6eaa9cDD64207B8F1721D8743F54fA9779d82",
      abi: [
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "facetAddress",
                  type: "address",
                },
                {
                  internalType: "enum IDiamond.FacetCutAction",
                  name: "action",
                  type: "uint8",
                },
                {
                  internalType: "bytes4[]",
                  name: "functionSelectors",
                  type: "bytes4[]",
                },
              ],
              internalType: "struct IDiamond.FacetCut[]",
              name: "_diamondCut",
              type: "tuple[]",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "init",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "initCalldata",
                  type: "bytes",
                },
              ],
              internalType: "struct DiamondArgs",
              name: "_args",
              type: "tuple",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotAddFunctionToDiamondThatAlreadyExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotAddSelectorsToZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveFunctionThatDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotRemoveImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionThatDoesNotExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4[]",
              name: "_selectors",
              type: "bytes4[]",
            },
          ],
          name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_selector",
              type: "bytes4",
            },
          ],
          name: "CannotReplaceImmutableFunction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "_functionSelector",
              type: "bytes4",
            },
          ],
          name: "FunctionNotFound",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "_action",
              type: "uint8",
            },
          ],
          name: "IncorrectFacetCutAction",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_initializationContractAddress",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_calldata",
              type: "bytes",
            },
          ],
          name: "InitializationFunctionReverted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_contractAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "_message",
              type: "string",
            },
          ],
          name: "NoBytecodeAtAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "NoSelectorsProvidedForFacetForCut",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_facetAddress",
              type: "address",
            },
          ],
          name: "RemoveFacetAddressMustBeZeroAddress",
          type: "error",
        },
        {
          stateMutability: "payable",
          type: "fallback",
        },
        {
          inputs: [],
          name: "getUnadusAddress",
          outputs: [
            {
              internalType: "address",
              name: "unadus",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "initializeUnadus",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
